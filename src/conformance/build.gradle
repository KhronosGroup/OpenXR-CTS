// Copyright (c) 2020-2023, The Khronos Group Inc.
//
// SPDX-License-Identifier: Apache-2.0

// Open this directory in Android Studio, or build with Gradle,
// to build the conformance suite.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
    }
}

repositories {
    google()
    mavenCentral()
}

apply plugin: 'com.android.application'

// These next few lines are just to make the version match the OpenXR release.
project.ext.repoRoot = file('../../')
apply from: file('../version.gradle')

def assetDest = layout.buildDir.dir('intermediates/assets')

task copyFont(type: Copy) {
    from('conformance_test') {
        include '*.otf'
    }
    into assetDest
}

task copyAssets(type: Copy) {
    from('conformance_test/composition_examples') {
        include '*.png'
    }
    into assetDest
    dependsOn copyFont
}

task copyLayerInfo(type: Copy) {
    from('conformance_test/android_assets') {
        include '**/*.json'
    }
    into assetDest
    dependsOn copyFont
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"
    ndkVersion "21.4.7075529"

    defaultConfig {
        applicationId "org.khronos.openxr.cts"
        // for Vulkan, need at least 24
        minSdkVersion 24
        compileSdkVersion 26

        versionName = project.versionOpenXR.toString() + project.versionQualifier
        versionCode = project.versionOpenXR.getVersionCode()

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_shared',
                        '-DBUILD_TESTS=OFF',
                        '-DBUILD_LOADER=ON',
                        '-DBUILD_CONFORMANCE_TESTS=ON',
                        '-DBUILD_ALL_EXTENSIONS=ON'
                targets 'conformance_test', 'openxr_loader', 'XrApiLayer_runtime_conformance'
            }
        }
        preBuild.dependsOn(copyAssets)
        preBuild.dependsOn(copyLayerInfo)
    }
    sourceSets {
        main {
            manifest.srcFile 'platform_specific/AndroidManifest.xml'
            res.srcDirs 'platform_specific/android_resources'
            assets.srcDirs assetDest
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    externalNativeBuild {
        cmake {
            path "${project.repoRoot}/CMakeLists.txt"
        }
    }
}
